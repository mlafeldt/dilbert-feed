service: dilbert-feed

provider:
  name: aws
  runtime: go1.x
  memorySize: 256
  timeout: 30
  stage: ${opt:stage, 'production'}
  region: ${env:AWS_REGION}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:PutObject
      Resource:
        - Fn::Join:
            - "/"
            - - Fn::GetAtt: [Bucket, Arn]
              - "*"
  environment:
    BUCKET_NAME:
      Ref: Bucket
    BUCKET_PREFIX: strips/

package:
  exclude:
    - ./**
  include:
    - ./bin/**

functions:
  get-strip:
    handler: bin/get-strip
    events:
      - schedule:
          # Run at 07:55 (UTC) every day
          rate: "cron(55 7 * * ? *)"
  gen-feed:
    handler: bin/gen-feed
    environment:
      DOMAIN_NAME:
        Fn::GetAtt: [Bucket, DomainName]
    events:
      - schedule:
          # Run at 08:00 (UTC) every day
          rate: "cron(0 8 * * ? *)"

resources:
  Resources:
    Bucket:
      Type: AWS::S3::Bucket
      Properties:
        AccessControl: LogDeliveryWrite
        BucketName: ${self:service}
        LoggingConfiguration:
          LogFilePrefix: logs/
        LifecycleConfiguration:
          Rules:
            - Id: DeleteStripsAfter30Days
              Status: Enabled
              Prefix: strips/
              ExpirationInDays: 30
    BucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket:
          Ref: Bucket
        PolicyDocument:
          Statement:
            - Effect: Allow
              Principal: "*"
              Action:
                - s3:GetObject
              Resource:
                - Fn::Join:
                    - "/"
                    - - Fn::GetAtt: [Bucket, Arn]
                      - "*"
