name: Rust

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  rust:
    name: Rust
    runs-on: ubuntu-latest
    steps:
      - name: Get sources
        uses: actions/checkout@v2

      - name: Install Rust stable
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: rustfmt, clippy
          override: true

      - name: Set up Rust caching
        uses: Swatinem/rust-cache@v1

      - name: Check formatting
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: -- --check

      - name: Lint Lambda functions
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings

      - name: Test Lambda functions
        uses: actions-rs/cargo@v1
        with:
          command: test

      - name: Set up ARM cross compiler
        run: sudo apt-get install --assume-yes --no-install-recommends g++-aarch64-linux-gnu libc6-dev-arm64-cross

      - name: Build Lambda functions
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --target aarch64-unknown-linux-gnu --release
        env:
          CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER: aarch64-linux-gnu-gcc
          CC_aarch64_unknown_linux_gnu: aarch64-linux-gnu-gcc
          CXX_aarch64_unknown_linux_gnu: aarch64-linux-gnu-g+
